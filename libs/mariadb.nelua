##[[
  cinclude "<mysql/mysql.h>"
  linklib "mysqlclient"
]]
global tm: type <cimport,nodecl,ctypedef'tm'> = @record{
  tm_sec: cint,
  tm_min: cint,
  tm_hour: cint,
  tm_mday: cint,
  tm_mon: cint,
  tm_year: cint,
  tm_wday: cint,
  tm_yday: cint,
  tm_isdst: cint,
  tm_gmtoff: clong,
  tm_zone: cstring
}
global mysql_enum_shutdown_level: type <cimport,nodecl,using,ctypedef'mysql_enum_shutdown_level'> = @enum(cint){
  SHUTDOWN_DEFAULT = 0,
  KILL_QUERY = 254,
  KILL_CONNECTION = 255
}
global enum_server_command: type <cimport,nodecl,using,ctypedef'enum_server_command'> = @enum(cint){
  COM_SLEEP = 0,
  COM_QUIT = 1,
  COM_INIT_DB = 2,
  COM_QUERY = 3,
  COM_FIELD_LIST = 4,
  COM_CREATE_DB = 5,
  COM_DROP_DB = 6,
  COM_REFRESH = 7,
  COM_SHUTDOWN = 8,
  COM_STATISTICS = 9,
  COM_PROCESS_INFO = 10,
  COM_CONNECT = 11,
  COM_PROCESS_KILL = 12,
  COM_DEBUG = 13,
  COM_PING = 14,
  COM_TIME = 15,
  COM_DELAYED_INSERT = 16,
  COM_CHANGE_USER = 17,
  COM_BINLOG_DUMP = 18,
  COM_TABLE_DUMP = 19,
  COM_CONNECT_OUT = 20,
  COM_REGISTER_SLAVE = 21,
  COM_STMT_PREPARE = 22,
  COM_STMT_EXECUTE = 23,
  COM_STMT_SEND_LONG_DATA = 24,
  COM_STMT_CLOSE = 25,
  COM_STMT_RESET = 26,
  COM_SET_OPTION = 27,
  COM_STMT_FETCH = 28,
  COM_DAEMON = 29,
  COM_UNSUPPORTED = 30,
  COM_RESET_CONNECTION = 31,
  COM_STMT_BULK_EXECUTE = 250,
  COM_RESERVED_1 = 254,
  COM_END = 255
}
global MARIADB_PVIO: type <cimport,nodecl,forwarddecl> = @record{}
global st_mariadb_net_extension: type <cimport,nodecl,ctypedef'st_mariadb_net_extension',forwarddecl> = @record{}
global NET: type <cimport,nodecl> = @record{
  pvio: *MARIADB_PVIO,
  buff: *cuchar,
  buff_end: *cuchar,
  write_pos: *cuchar,
  read_pos: *cuchar,
  fd: cint,
  remain_in_buf: culong,
  length: culong,
  buf_length: culong,
  where_b: culong,
  max_packet: culong,
  max_packet_size: culong,
  pkt_nr: cuint,
  compress_pkt_nr: cuint,
  write_timeout: cuint,
  read_timeout: cuint,
  retry_count: cuint,
  fcntl: cint,
  return_status: *cuint,
  reading_or_writing: cuchar,
  save_char: cchar,
  unused_1: cchar,
  tls_verify_status: cuchar,
  compress: cchar,
  unused_2: cchar,
  unused_3: cstring,
  last_errno: cuint,
  error: cuchar,
  unused_5: cchar,
  unused_6: cchar,
  last_error: [512]cchar,
  sqlstate: [6]cchar,
  extension: *st_mariadb_net_extension
}
global enum_mysql_set_option: type <cimport,nodecl,using,ctypedef'enum_mysql_set_option'> = @enum(cint){
  MYSQL_OPTION_MULTI_STATEMENTS_ON = 0,
  MYSQL_OPTION_MULTI_STATEMENTS_OFF = 1
}
global enum_session_state_type: type <cimport,nodecl,using,ctypedef'enum_session_state_type'> = @enum(cint){
  SESSION_TRACK_SYSTEM_VARIABLES = 0,
  SESSION_TRACK_SCHEMA = 1,
  SESSION_TRACK_STATE_CHANGE = 2,
  SESSION_TRACK_GTIDS = 3,
  SESSION_TRACK_TRANSACTION_CHARACTERISTICS = 4,
  SESSION_TRACK_TRANSACTION_STATE = 5
}
global enum_field_types: type <cimport,nodecl,using,ctypedef'enum_field_types'> = @enum(cint){
  MYSQL_TYPE_DECIMAL = 0,
  MYSQL_TYPE_TINY = 1,
  MYSQL_TYPE_SHORT = 2,
  MYSQL_TYPE_LONG = 3,
  MYSQL_TYPE_FLOAT = 4,
  MYSQL_TYPE_DOUBLE = 5,
  MYSQL_TYPE_NULL = 6,
  MYSQL_TYPE_TIMESTAMP = 7,
  MYSQL_TYPE_LONGLONG = 8,
  MYSQL_TYPE_INT24 = 9,
  MYSQL_TYPE_DATE = 10,
  MYSQL_TYPE_TIME = 11,
  MYSQL_TYPE_DATETIME = 12,
  MYSQL_TYPE_YEAR = 13,
  MYSQL_TYPE_NEWDATE = 14,
  MYSQL_TYPE_VARCHAR = 15,
  MYSQL_TYPE_BIT = 16,
  MYSQL_TYPE_TIMESTAMP2 = 17,
  MYSQL_TYPE_DATETIME2 = 18,
  MYSQL_TYPE_TIME2 = 19,
  MYSQL_TYPE_JSON = 245,
  MYSQL_TYPE_NEWDECIMAL = 246,
  MYSQL_TYPE_ENUM = 247,
  MYSQL_TYPE_SET = 248,
  MYSQL_TYPE_TINY_BLOB = 249,
  MYSQL_TYPE_MEDIUM_BLOB = 250,
  MYSQL_TYPE_LONG_BLOB = 251,
  MYSQL_TYPE_BLOB = 252,
  MYSQL_TYPE_VAR_STRING = 253,
  MYSQL_TYPE_STRING = 254,
  MYSQL_TYPE_GEOMETRY = 255,
  MAX_NO_FIELD_TYPES = 256
}
global LIST: type <cimport,nodecl> = @record{
  prev: *LIST,
  next: *LIST,
  data: pointer
}
global MARIADB_CHARSET_INFO: type <cimport,nodecl> = @record{
  nr: cuint,
  state: cuint,
  csname: cstring,
  name: cstring,
  dir: cstring,
  codepage: cuint,
  encoding: cstring,
  char_minlen: cuint,
  char_maxlen: cuint,
  mb_charlen: function(c: cuint): cuint,
  mb_valid: function(start: cstring, end_: cstring): cuint
}
global MARIADB_CONST_STRING: type <cimport,nodecl> = @record{
  str: cstring,
  length: csize
}
global MARIADB_CONST_DATA: type <cimport,nodecl> = @record{
  data: *cuchar,
  length: csize
}
global MA_USED_MEM: type <cimport,nodecl> = @record{
  next: *MA_USED_MEM,
  left: csize,
  size: csize
}
global MA_MEM_ROOT: type <cimport,nodecl> = @record{
  free: *MA_USED_MEM,
  used: *MA_USED_MEM,
  pre_alloc: *MA_USED_MEM,
  min_malloc: csize,
  block_size: csize,
  block_num: cuint,
  first_block_usage: cuint,
  error_handler: function(): void
}
global MYSQL_FIELD: type <cimport,nodecl> = @record{
  name: cstring,
  org_name: cstring,
  table: cstring,
  org_table: cstring,
  db: cstring,
  catalog: cstring,
  def: cstring,
  length: culong,
  max_length: culong,
  name_length: cuint,
  org_name_length: cuint,
  table_length: cuint,
  org_table_length: cuint,
  db_length: cuint,
  catalog_length: cuint,
  def_length: cuint,
  flags: cuint,
  decimals: cuint,
  charsetnr: cuint,
  type: enum_field_types,
  extension: pointer
}
global MYSQL_ROW: type <cimport,nodecl> = @*cstring
global MYSQL_FIELD_OFFSET: type <cimport,nodecl> = @cuint
global MYSQL_ROWS: type <cimport,nodecl> = @record{
  next: *MYSQL_ROWS,
  data: MYSQL_ROW,
  length: culong
}
global MYSQL_ROW_OFFSET: type <cimport,nodecl> = @*MYSQL_ROWS
global MYSQL_DATA: type <cimport,nodecl> = @record{
  data: *MYSQL_ROWS,
  embedded_info: pointer,
  alloc: MA_MEM_ROOT,
  rows: culonglong,
  fields: cuint,
  extension: pointer
}
global mysql_option: type <cimport,nodecl,using,ctypedef'mysql_option'> = @enum(cint){
  MYSQL_OPT_CONNECT_TIMEOUT = 0,
  MYSQL_OPT_COMPRESS = 1,
  MYSQL_OPT_NAMED_PIPE = 2,
  MYSQL_INIT_COMMAND = 3,
  MYSQL_READ_DEFAULT_FILE = 4,
  MYSQL_READ_DEFAULT_GROUP = 5,
  MYSQL_SET_CHARSET_DIR = 6,
  MYSQL_SET_CHARSET_NAME = 7,
  MYSQL_OPT_LOCAL_INFILE = 8,
  MYSQL_OPT_PROTOCOL = 9,
  MYSQL_SHARED_MEMORY_BASE_NAME = 10,
  MYSQL_OPT_READ_TIMEOUT = 11,
  MYSQL_OPT_WRITE_TIMEOUT = 12,
  MYSQL_OPT_USE_RESULT = 13,
  MYSQL_OPT_USE_REMOTE_CONNECTION = 14,
  MYSQL_OPT_USE_EMBEDDED_CONNECTION = 15,
  MYSQL_OPT_GUESS_CONNECTION = 16,
  MYSQL_SET_CLIENT_IP = 17,
  MYSQL_SECURE_AUTH = 18,
  MYSQL_REPORT_DATA_TRUNCATION = 19,
  MYSQL_OPT_RECONNECT = 20,
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT = 21,
  MYSQL_PLUGIN_DIR = 22,
  MYSQL_DEFAULT_AUTH = 23,
  MYSQL_OPT_BIND = 24,
  MYSQL_OPT_SSL_KEY = 25,
  MYSQL_OPT_SSL_CERT = 26,
  MYSQL_OPT_SSL_CA = 27,
  MYSQL_OPT_SSL_CAPATH = 28,
  MYSQL_OPT_SSL_CIPHER = 29,
  MYSQL_OPT_SSL_CRL = 30,
  MYSQL_OPT_SSL_CRLPATH = 31,
  MYSQL_OPT_CONNECT_ATTR_RESET = 32,
  MYSQL_OPT_CONNECT_ATTR_ADD = 33,
  MYSQL_OPT_CONNECT_ATTR_DELETE = 34,
  MYSQL_SERVER_PUBLIC_KEY = 35,
  MYSQL_ENABLE_CLEARTEXT_PLUGIN = 36,
  MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS = 37,
  MYSQL_OPT_SSL_ENFORCE = 38,
  MYSQL_OPT_MAX_ALLOWED_PACKET = 39,
  MYSQL_OPT_NET_BUFFER_LENGTH = 40,
  MYSQL_OPT_TLS_VERSION = 41,
  MYSQL_OPT_ZSTD_COMPRESSION_LEVEL = 42,
  MYSQL_PROGRESS_CALLBACK = 5999,
  MYSQL_OPT_NONBLOCK = 6000,
  MYSQL_DATABASE_DRIVER = 7000,
  MARIADB_OPT_SSL_FP = 7001,
  MARIADB_OPT_SSL_FP_LIST = 7002,
  MARIADB_OPT_TLS_PASSPHRASE = 7003,
  MARIADB_OPT_TLS_CIPHER_STRENGTH = 7004,
  MARIADB_OPT_TLS_VERSION = 7005,
  MARIADB_OPT_TLS_PEER_FP = 7006,
  MARIADB_OPT_TLS_PEER_FP_LIST = 7007,
  MARIADB_OPT_CONNECTION_READ_ONLY = 7008,
  MYSQL_OPT_CONNECT_ATTRS = 7009,
  MARIADB_OPT_USERDATA = 7010,
  MARIADB_OPT_CONNECTION_HANDLER = 7011,
  MARIADB_OPT_PORT = 7012,
  MARIADB_OPT_UNIXSOCKET = 7013,
  MARIADB_OPT_PASSWORD = 7014,
  MARIADB_OPT_HOST = 7015,
  MARIADB_OPT_USER = 7016,
  MARIADB_OPT_SCHEMA = 7017,
  MARIADB_OPT_DEBUG = 7018,
  MARIADB_OPT_FOUND_ROWS = 7019,
  MARIADB_OPT_MULTI_RESULTS = 7020,
  MARIADB_OPT_MULTI_STATEMENTS = 7021,
  MARIADB_OPT_INTERACTIVE = 7022,
  MARIADB_OPT_PROXY_HEADER = 7023,
  MARIADB_OPT_IO_WAIT = 7024,
  MARIADB_OPT_SKIP_READ_RESPONSE = 7025,
  MARIADB_OPT_RESTRICTED_AUTH = 7026,
  MARIADB_OPT_RPL_REGISTER_REPLICA = 7027,
  MARIADB_OPT_STATUS_CALLBACK = 7028,
  MARIADB_OPT_SERVER_PLUGINS = 7029,
  MARIADB_OPT_BULK_UNIT_RESULTS = 7030,
  MARIADB_OPT_TLS_VERIFICATION_CALLBACK = 7031
}
global mariadb_value: type <cimport,nodecl,using,ctypedef'mariadb_value'> = @enum(cint){
  MARIADB_CHARSET_ID = 0,
  MARIADB_CHARSET_NAME = 1,
  MARIADB_CLIENT_ERRORS = 2,
  MARIADB_CLIENT_VERSION = 3,
  MARIADB_CLIENT_VERSION_ID = 4,
  MARIADB_CONNECTION_ASYNC_TIMEOUT = 5,
  MARIADB_CONNECTION_ASYNC_TIMEOUT_MS = 6,
  MARIADB_CONNECTION_MARIADB_CHARSET_INFO = 7,
  MARIADB_CONNECTION_ERROR = 8,
  MARIADB_CONNECTION_ERROR_ID = 9,
  MARIADB_CONNECTION_HOST = 10,
  MARIADB_CONNECTION_INFO = 11,
  MARIADB_CONNECTION_PORT = 12,
  MARIADB_CONNECTION_PROTOCOL_VERSION_ID = 13,
  MARIADB_CONNECTION_PVIO_TYPE = 14,
  MARIADB_CONNECTION_SCHEMA = 15,
  MARIADB_CONNECTION_SERVER_TYPE = 16,
  MARIADB_CONNECTION_SERVER_VERSION = 17,
  MARIADB_CONNECTION_SERVER_VERSION_ID = 18,
  MARIADB_CONNECTION_SOCKET = 19,
  MARIADB_CONNECTION_SQLSTATE = 20,
  MARIADB_CONNECTION_SSL_CIPHER = 21,
  MARIADB_TLS_LIBRARY = 22,
  MARIADB_CONNECTION_TLS_VERSION = 23,
  MARIADB_CONNECTION_TLS_VERSION_ID = 24,
  MARIADB_CONNECTION_TYPE = 25,
  MARIADB_CONNECTION_UNIX_SOCKET = 26,
  MARIADB_CONNECTION_USER = 27,
  MARIADB_MAX_ALLOWED_PACKET = 28,
  MARIADB_NET_BUFFER_LENGTH = 29,
  MARIADB_CONNECTION_SERVER_STATUS = 30,
  MARIADB_CONNECTION_SERVER_CAPABILITIES = 31,
  MARIADB_CONNECTION_EXTENDED_SERVER_CAPABILITIES = 32,
  MARIADB_CONNECTION_CLIENT_CAPABILITIES = 33,
  MARIADB_CONNECTION_BYTES_READ = 34,
  MARIADB_CONNECTION_BYTES_SENT = 35,
  MARIADB_TLS_PEER_CERT_INFO = 36,
  MARIADB_TLS_VERIFY_STATUS = 37
}
global mysql_status: type <cimport,nodecl,using,ctypedef'mysql_status'> = @enum(cint){
  MYSQL_STATUS_READY = 0,
  MYSQL_STATUS_GET_RESULT = 1,
  MYSQL_STATUS_USE_RESULT = 2,
  MYSQL_STATUS_QUERY_SENT = 3,
  MYSQL_STATUS_SENDING_LOAD_DATA = 4,
  MYSQL_STATUS_FETCHING_DATA = 5,
  MYSQL_STATUS_NEXT_RESULT_PENDING = 6,
  MYSQL_STATUS_QUIT_SENT = 7,
  MYSQL_STATUS_STMT_RESULT = 8
}
global mysql_protocol_type: type <cimport,nodecl,using,ctypedef'mysql_protocol_type'> = @enum(cint){
  MYSQL_PROTOCOL_DEFAULT = 0,
  MYSQL_PROTOCOL_TCP = 1,
  MYSQL_PROTOCOL_SOCKET = 2,
  MYSQL_PROTOCOL_PIPE = 3,
  MYSQL_PROTOCOL_MEMORY = 4
}
global st_dynamic_array: type <cimport,nodecl,ctypedef'st_dynamic_array',forwarddecl> = @record{}
global st_mysql_options_extension: type <cimport,nodecl,ctypedef'st_mysql_options_extension',forwarddecl> = @record{}
global st_mysql_options: type <cimport,nodecl,ctypedef'st_mysql_options'> = @record{
  connect_timeout: cuint,
  read_timeout: cuint,
  write_timeout: cuint,
  port: cuint,
  protocol: cuint,
  client_flag: culong,
  host: cstring,
  user: cstring,
  password: cstring,
  unix_socket: cstring,
  db: cstring,
  init_command: *st_dynamic_array,
  my_cnf_file: cstring,
  my_cnf_group: cstring,
  charset_dir: cstring,
  charset_name: cstring,
  ssl_key: cstring,
  ssl_cert: cstring,
  ssl_ca: cstring,
  ssl_capath: cstring,
  ssl_cipher: cstring,
  shared_memory_base_name: cstring,
  max_allowed_packet: culong,
  use_ssl: cchar,
  compress: cchar,
  named_pipe: cchar,
  reconnect: cchar,
  unused_1: cchar,
  unused_2: cchar,
  unused_3: cchar,
  methods_to_use: mysql_option,
  bind_address: cstring,
  secure_auth: cchar,
  report_data_truncation: cchar,
  local_infile_init: function(a1: *pointer, a2: cstring, a3: pointer): cint,
  local_infile_read: function(a1: pointer, a2: cstring, a3: cuint): cint,
  local_infile_end: function(a1: pointer): void,
  local_infile_error: function(a1: pointer, a2: cstring, a3: cuint): cint,
  local_infile_userdata: pointer,
  extension: *st_mysql_options_extension
}
global st_mariadb_methods: type <cimport,nodecl,ctypedef'st_mariadb_methods',forwarddecl> = @record{}
global st_mariadb_extension: type <cimport,nodecl,ctypedef'st_mariadb_extension',forwarddecl> = @record{}
global MYSQL: type <cimport,nodecl> = @record{
  net: NET,
  unused_0: pointer,
  host: cstring,
  user: cstring,
  passwd: cstring,
  unix_socket: cstring,
  server_version: cstring,
  host_info: cstring,
  info: cstring,
  db: cstring,
  charset: *MARIADB_CHARSET_INFO,
  fields: *MYSQL_FIELD,
  field_alloc: MA_MEM_ROOT,
  affected_rows: culonglong,
  insert_id: culonglong,
  extra_info: culonglong,
  thread_id: culong,
  packet_length: culong,
  port: cuint,
  client_flag: culong,
  server_capabilities: culong,
  protocol_version: cuint,
  field_count: cuint,
  server_status: cuint,
  server_language: cuint,
  warning_count: cuint,
  options: st_mysql_options,
  status: mysql_status,
  free_me: cchar,
  unused_1: cchar,
  scramble_buff: [21]cchar,
  unused_2: cchar,
  unused_3: pointer,
  unused_4: pointer,
  unused_5: pointer,
  unused_6: pointer,
  stmts: *LIST,
  methods: *st_mariadb_methods,
  thd: pointer,
  unbuffered_fetch_owner: *cchar,
  info_buffer: cstring,
  extension: *st_mariadb_extension
}
global MYSQL_RES: type <cimport,nodecl> = @record{
  row_count: culonglong,
  field_count: cuint,
  current_field: cuint,
  fields: *MYSQL_FIELD,
  data: *MYSQL_DATA,
  data_cursor: *MYSQL_ROWS,
  field_alloc: MA_MEM_ROOT,
  row: MYSQL_ROW,
  current_row: MYSQL_ROW,
  lengths: *culong,
  handle: *MYSQL,
  eof: cchar,
  is_ps: cchar
}
global MYSQL_PARAMETERS: type <cimport,nodecl> = @record{
  p_max_allowed_packet: *culong,
  p_net_buffer_length: *culong,
  extension: pointer
}
global mariadb_field_attr_t: type <cimport,nodecl,using,ctypedef'mariadb_field_attr_t'> = @enum(cint){
  MARIADB_FIELD_ATTR_DATA_TYPE_NAME = 0,
  MARIADB_FIELD_ATTR_FORMAT_NAME = 1
}
global enum_mysql_timestamp_type: type <cimport,nodecl,using,ctypedef'enum_mysql_timestamp_type'> = @enum(cint){
  MYSQL_TIMESTAMP_NONE = -2,
  MYSQL_TIMESTAMP_ERROR = -1,
  MYSQL_TIMESTAMP_DATE = 0,
  MYSQL_TIMESTAMP_DATETIME = 1,
  MYSQL_TIMESTAMP_TIME = 2
}
global MYSQL_TIME: type <cimport,nodecl> = @record{
  year: cuint,
  month: cuint,
  day: cuint,
  hour: cuint,
  minute: cuint,
  second: cuint,
  second_part: culong,
  neg: cchar,
  time_type: enum_mysql_timestamp_type
}
global MY_CHARSET_INFO: type <cimport,nodecl> = @record{
  number: cuint,
  state: cuint,
  csname: cstring,
  name: cstring,
  comment: cstring,
  dir: cstring,
  mbminlen: cuint,
  mbmaxlen: cuint
}
global MYSQL_STMT: type <cimport,nodecl,forwarddecl> = @record{}
global mysql_stmt_use_or_store_func: type <cimport,nodecl> = @function(a1: *MYSQL_STMT): *MYSQL_RES
global enum_stmt_attr_type: type <cimport,nodecl,using,ctypedef'enum_stmt_attr_type'> = @enum(cint){
  STMT_ATTR_UPDATE_MAX_LENGTH = 0,
  STMT_ATTR_CURSOR_TYPE = 1,
  STMT_ATTR_PREFETCH_ROWS = 2,
  STMT_ATTR_PREBIND_PARAMS = 200,
  STMT_ATTR_ARRAY_SIZE = 201,
  STMT_ATTR_ROW_SIZE = 202,
  STMT_ATTR_STATE = 203,
  STMT_ATTR_CB_USER_DATA = 204,
  STMT_ATTR_CB_PARAM = 205,
  STMT_ATTR_CB_RESULT = 206,
  STMT_ATTR_SQL_STATEMENT = 207
}
global enum_mysqlnd_stmt_state: type <cimport,nodecl,using> = @enum(cint){
  MYSQL_STMT_INITTED = 0,
  MYSQL_STMT_PREPARED = 1,
  MYSQL_STMT_EXECUTED = 2,
  MYSQL_STMT_WAITING_USE_OR_STORE = 3,
  MYSQL_STMT_USE_OR_STORE_CALLED = 4,
  MYSQL_STMT_USER_FETCHING = 5,
  MYSQL_STMT_FETCH_DONE = 6
}
global MYSQL_BIND: type <cimport,nodecl> = @record{
  length: *culong,
  is_null: *cchar,
  buffer: pointer,
  error: *cchar,
  u: union{
    row_ptr: *cuchar,
    indicator: cstring
  },
  store_param_func: function(net: *NET, param: *MYSQL_BIND): void,
  fetch_result: function(a1: *MYSQL_BIND, a2: *MYSQL_FIELD, row: **cuchar): void,
  skip_result: function(a1: *MYSQL_BIND, a2: *MYSQL_FIELD, row: **cuchar): void,
  buffer_length: culong,
  offset: culong,
  length_value: culong,
  flags: cuint,
  pack_length: cuint,
  buffer_type: enum_field_types,
  error_value: cchar,
  is_unsigned: cchar,
  long_data_used: cchar,
  is_null_value: cchar,
  extension: pointer
}
global mysql_upsert_status: type <cimport,nodecl> = @record{
  warning_count: cuint,
  server_status: cuint,
  affected_rows: culonglong,
  last_insert_id: culonglong
}
global MYSQL_CMD_BUFFER: type <cimport,nodecl> = @record{
  buffer: *cuchar,
  length: csize
}
global mysql_error_info: type <cimport,nodecl> = @record{
  error_no: cuint,
  error: [513]cchar,
  sqlstate: [6]cchar
}
global mysql_stmt_fetch_row_func: type <cimport,nodecl> = @function(stmt: *MYSQL_STMT, row: **cuchar): cint
MYSQL_STMT = @record{
  mem_root: MA_MEM_ROOT,
  mysql: *MYSQL,
  stmt_id: culong,
  flags: culong,
  state: enum_mysqlnd_stmt_state,
  fields: *MYSQL_FIELD,
  field_count: cuint,
  param_count: cuint,
  send_types_to_server: cuchar,
  params: *MYSQL_BIND,
  bind: *MYSQL_BIND,
  result: MYSQL_DATA,
  result_cursor: *MYSQL_ROWS,
  bind_result_done: cchar,
  bind_param_done: cchar,
  upsert_status: mysql_upsert_status,
  last_errno: cuint,
  last_error: [513]cchar,
  sqlstate: [6]cchar,
  update_max_length: cchar,
  prefetch_rows: culong,
  list: LIST,
  cursor_exists: cchar,
  extension: pointer,
  fetch_row_func: mysql_stmt_fetch_row_func,
  execute_count: cuint,
  default_rset_handler: mysql_stmt_use_or_store_func,
  request_buffer: *cuchar,
  array_size: cuint,
  row_size: csize,
  prebind_params: cuint,
  user_data: pointer,
  result_callback: function(data: pointer, column: cuint, row: **cuchar): void,
  param_callback: function(data: pointer, bind: *MYSQL_BIND, row_nr: cuint): cchar,
  request_length: csize,
  sql: MARIADB_CONST_STRING
}
global MYSQL_PS_CONVERSION: type <cimport,nodecl> = @record{
  func: function(r_param: *MYSQL_BIND, field: *MYSQL_FIELD, row: **cuchar): void,
  pack_len: cint,
  max_len: culong
}
global st_mysql_client_plugin: type <cimport,nodecl,ctypedef'st_mysql_client_plugin'> = @record{
  type: cint,
  interface_version: cuint,
  name: cstring,
  author: cstring,
  desc: cstring,
  version: [3]cuint,
  license: cstring,
  mysql_api: pointer,
  init: function(a1: cstring, a2: csize, a3: cint, a4: cvalist): cint,
  deinit: function(): cint,
  options: function(option: cstring, a2: pointer): cint
}
global mariadb_tls_verification: type <cimport,nodecl,using,ctypedef'mariadb_tls_verification'> = @enum(cint){
  MARIADB_VERIFY_NONE = 0,
  MARIADB_VERIFY_PIPE = 1,
  MARIADB_VERIFY_UNIXSOCKET = 2,
  MARIADB_VERIFY_LOCALHOST = 3,
  MARIADB_VERIFY_FINGERPRINT = 4,
  MARIADB_VERIFY_PEER_CERT = 5
}
global MARIADB_X509_INFO: type <cimport,nodecl> = @record{
  version: cint,
  issuer: cstring,
  subject: cstring,
  fingerprint: [129]cchar,
  not_before: tm,
  not_after: tm
}
global st_mariadb_api: type <cimport,nodecl,ctypedef'st_mariadb_api'> = @record{
  mysql_num_rows: function(res: *MYSQL_RES): culonglong,
  mysql_num_fields: function(res: *MYSQL_RES): cuint,
  mysql_eof: function(res: *MYSQL_RES): cchar,
  mysql_fetch_field_direct: function(res: *MYSQL_RES, fieldnr: cuint): *MYSQL_FIELD,
  mysql_fetch_fields: function(res: *MYSQL_RES): *MYSQL_FIELD,
  mysql_row_tell: function(res: *MYSQL_RES): *MYSQL_ROWS,
  mysql_field_tell: function(res: *MYSQL_RES): cuint,
  mysql_field_count: function(mysql: *MYSQL): cuint,
  mysql_more_results: function(mysql: *MYSQL): cchar,
  mysql_next_result: function(mysql: *MYSQL): cint,
  mysql_affected_rows: function(mysql: *MYSQL): culonglong,
  mysql_autocommit: function(mysql: *MYSQL, mode: cchar): cchar,
  mysql_commit: function(mysql: *MYSQL): cchar,
  mysql_rollback: function(mysql: *MYSQL): cchar,
  mysql_insert_id: function(mysql: *MYSQL): culonglong,
  mysql_errno: function(mysql: *MYSQL): cuint,
  mysql_error: function(mysql: *MYSQL): cstring,
  mysql_info: function(mysql: *MYSQL): cstring,
  mysql_thread_id: function(mysql: *MYSQL): culong,
  mysql_character_set_name: function(mysql: *MYSQL): cstring,
  mysql_get_character_set_info: function(mysql: *MYSQL, cs: *MY_CHARSET_INFO): void,
  mysql_set_character_set: function(mysql: *MYSQL, csname: cstring): cint,
  mariadb_get_infov: function(mysql: *MYSQL, value: mariadb_value, arg: pointer, ...: cvarargs): cchar,
  mariadb_get_info: function(mysql: *MYSQL, value: mariadb_value, arg: pointer): cchar,
  mysql_init: function(mysql: *MYSQL): *MYSQL,
  mysql_ssl_set: function(mysql: *MYSQL, key: cstring, cert: cstring, ca: cstring, capath: cstring, cipher: cstring): cint,
  mysql_get_ssl_cipher: function(mysql: *MYSQL): cstring,
  mysql_change_user: function(mysql: *MYSQL, user: cstring, passwd: cstring, db: cstring): cchar,
  mysql_real_connect: function(mysql: *MYSQL, host: cstring, user: cstring, passwd: cstring, db: cstring, port: cuint, unix_socket: cstring, clientflag: culong): *MYSQL,
  mysql_close: function(sock: *MYSQL): void,
  mysql_select_db: function(mysql: *MYSQL, db: cstring): cint,
  mysql_query: function(mysql: *MYSQL, q: cstring): cint,
  mysql_send_query: function(mysql: *MYSQL, q: cstring, length: culong): cint,
  mysql_read_query_result: function(mysql: *MYSQL): cchar,
  mysql_real_query: function(mysql: *MYSQL, q: cstring, length: culong): cint,
  mysql_shutdown: function(mysql: *MYSQL, shutdown_level: mysql_enum_shutdown_level): cint,
  mysql_dump_debug_info: function(mysql: *MYSQL): cint,
  mysql_refresh: function(mysql: *MYSQL, refresh_options: cuint): cint,
  mysql_kill: function(mysql: *MYSQL, pid: culong): cint,
  mysql_ping: function(mysql: *MYSQL): cint,
  mysql_stat: function(mysql: *MYSQL): cstring,
  mysql_get_server_info: function(mysql: *MYSQL): cstring,
  mysql_get_server_version: function(mysql: *MYSQL): culong,
  mysql_get_host_info: function(mysql: *MYSQL): cstring,
  mysql_get_proto_info: function(mysql: *MYSQL): cuint,
  mysql_list_dbs: function(mysql: *MYSQL, wild: cstring): *MYSQL_RES,
  mysql_list_tables: function(mysql: *MYSQL, wild: cstring): *MYSQL_RES,
  mysql_list_fields: function(mysql: *MYSQL, table: cstring, wild: cstring): *MYSQL_RES,
  mysql_list_processes: function(mysql: *MYSQL): *MYSQL_RES,
  mysql_store_result: function(mysql: *MYSQL): *MYSQL_RES,
  mysql_use_result: function(mysql: *MYSQL): *MYSQL_RES,
  mysql_options: function(mysql: *MYSQL, option: mysql_option, arg: pointer): cint,
  mysql_free_result: function(result: *MYSQL_RES): void,
  mysql_data_seek: function(result: *MYSQL_RES, offset: culonglong): void,
  mysql_row_seek: function(result: *MYSQL_RES, a2: MYSQL_ROW_OFFSET): MYSQL_ROW_OFFSET,
  mysql_field_seek: function(result: *MYSQL_RES, offset: MYSQL_FIELD_OFFSET): MYSQL_FIELD_OFFSET,
  mysql_fetch_row: function(result: *MYSQL_RES): MYSQL_ROW,
  mysql_fetch_lengths: function(result: *MYSQL_RES): *culong,
  mysql_fetch_field: function(result: *MYSQL_RES): *MYSQL_FIELD,
  mysql_escape_string: function(to: cstring, from: cstring, from_length: culong): culong,
  mysql_real_escape_string: function(mysql: *MYSQL, to: cstring, from: cstring, length: culong): culong,
  mysql_thread_safe: function(): cuint,
  mysql_warning_count: function(mysql: *MYSQL): cuint,
  mysql_sqlstate: function(mysql: *MYSQL): cstring,
  mysql_server_init: function(argc: cint, argv: *cstring, groups: *cstring): cint,
  mysql_server_end: function(): void,
  mysql_thread_end: function(): void,
  mysql_thread_init: function(): cchar,
  mysql_set_server_option: function(mysql: *MYSQL, option: enum_mysql_set_option): cint,
  mysql_get_client_info: function(): cstring,
  mysql_get_client_version: function(): culong,
  mariadb_connection: function(mysql: *MYSQL): cchar,
  mysql_get_server_name: function(mysql: *MYSQL): cstring,
  mariadb_get_charset_by_name: function(csname: cstring): *MARIADB_CHARSET_INFO,
  mariadb_get_charset_by_nr: function(csnr: cuint): *MARIADB_CHARSET_INFO,
  mariadb_convert_string: function(from: cstring, from_len: *csize, from_cs: *MARIADB_CHARSET_INFO, to: cstring, to_len: *csize, to_cs: *MARIADB_CHARSET_INFO, errorcode: *cint): csize,
  mysql_optionsv: function(mysql: *MYSQL, option: mysql_option, ...: cvarargs): cint,
  mysql_get_optionv: function(mysql: *MYSQL, option: mysql_option, arg: pointer, ...: cvarargs): cint,
  mysql_get_option: function(mysql: *MYSQL, option: mysql_option, arg: pointer): cint,
  mysql_hex_string: function(to: cstring, from: cstring, len: culong): culong,
  mysql_get_socket: function(mysql: *MYSQL): cint,
  mysql_get_timeout_value: function(mysql: *MYSQL): cuint,
  mysql_get_timeout_value_ms: function(mysql: *MYSQL): cuint,
  mariadb_reconnect: function(mysql: *MYSQL): cchar,
  mysql_stmt_init: function(mysql: *MYSQL): *MYSQL_STMT,
  mysql_stmt_prepare: function(stmt: *MYSQL_STMT, query: cstring, length: culong): cint,
  mysql_stmt_execute: function(stmt: *MYSQL_STMT): cint,
  mysql_stmt_fetch: function(stmt: *MYSQL_STMT): cint,
  mysql_stmt_fetch_column: function(stmt: *MYSQL_STMT, bind_arg: *MYSQL_BIND, column: cuint, offset: culong): cint,
  mysql_stmt_store_result: function(stmt: *MYSQL_STMT): cint,
  mysql_stmt_param_count: function(stmt: *MYSQL_STMT): culong,
  mysql_stmt_attr_set: function(stmt: *MYSQL_STMT, attr_type: enum_stmt_attr_type, attr: pointer): cchar,
  mysql_stmt_attr_get: function(stmt: *MYSQL_STMT, attr_type: enum_stmt_attr_type, attr: pointer): cchar,
  mysql_stmt_bind_param: function(stmt: *MYSQL_STMT, bnd: *MYSQL_BIND): cchar,
  mysql_stmt_bind_result: function(stmt: *MYSQL_STMT, bnd: *MYSQL_BIND): cchar,
  mysql_stmt_close: function(stmt: *MYSQL_STMT): cchar,
  mysql_stmt_reset: function(stmt: *MYSQL_STMT): cchar,
  mysql_stmt_free_result: function(stmt: *MYSQL_STMT): cchar,
  mysql_stmt_send_long_data: function(stmt: *MYSQL_STMT, param_number: cuint, data: cstring, length: culong): cchar,
  mysql_stmt_result_metadata: function(stmt: *MYSQL_STMT): *MYSQL_RES,
  mysql_stmt_param_metadata: function(stmt: *MYSQL_STMT): *MYSQL_RES,
  mysql_stmt_errno: function(stmt: *MYSQL_STMT): cuint,
  mysql_stmt_error: function(stmt: *MYSQL_STMT): cstring,
  mysql_stmt_sqlstate: function(stmt: *MYSQL_STMT): cstring,
  mysql_stmt_row_seek: function(stmt: *MYSQL_STMT, offset: MYSQL_ROW_OFFSET): MYSQL_ROW_OFFSET,
  mysql_stmt_row_tell: function(stmt: *MYSQL_STMT): MYSQL_ROW_OFFSET,
  mysql_stmt_data_seek: function(stmt: *MYSQL_STMT, offset: culonglong): void,
  mysql_stmt_num_rows: function(stmt: *MYSQL_STMT): culonglong,
  mysql_stmt_affected_rows: function(stmt: *MYSQL_STMT): culonglong,
  mysql_stmt_insert_id: function(stmt: *MYSQL_STMT): culonglong,
  mysql_stmt_field_count: function(stmt: *MYSQL_STMT): cuint,
  mysql_stmt_next_result: function(stmt: *MYSQL_STMT): cint,
  mysql_stmt_more_results: function(stmt: *MYSQL_STMT): cchar,
  mariadb_stmt_execute_direct: function(stmt: *MYSQL_STMT, stmtstr: cstring, length: csize): cint,
  mysql_reset_connection: function(mysql: *MYSQL): cint
}
st_mariadb_methods = @record{
  db_connect: function(mysql: *MYSQL, host: cstring, user: cstring, passwd: cstring, db: cstring, port: cuint, unix_socket: cstring, clientflag: culong): *MYSQL,
  db_close: function(mysql: *MYSQL): void,
  db_command: function(mysql: *MYSQL, command: enum_server_command, arg: cstring, length: csize, skip_check: cchar, opt_arg: pointer): cint,
  db_skip_result: function(mysql: *MYSQL): void,
  db_read_query_result: function(mysql: *MYSQL): cint,
  db_read_rows: function(mysql: *MYSQL, fields: *MYSQL_FIELD, field_count: cuint): *MYSQL_DATA,
  db_read_one_row: function(mysql: *MYSQL, fields: cuint, row: MYSQL_ROW, lengths: *culong): cint,
  db_supported_buffer_type: function(type: enum_field_types): cchar,
  db_read_prepare_response: function(stmt: *MYSQL_STMT): cchar,
  db_read_stmt_result: function(mysql: *MYSQL): cint,
  db_stmt_get_result_metadata: function(stmt: *MYSQL_STMT): cchar,
  db_stmt_get_param_metadata: function(stmt: *MYSQL_STMT): cchar,
  db_stmt_read_all_rows: function(stmt: *MYSQL_STMT): cint,
  db_stmt_fetch: function(stmt: *MYSQL_STMT, row: **cuchar): cint,
  db_stmt_fetch_to_bind: function(stmt: *MYSQL_STMT, row: *cuchar): cint,
  db_stmt_flush_unbuffered: function(stmt: *MYSQL_STMT): void,
  set_error: function(mysql: *MYSQL, error_nr: cuint, sqlstate: cstring, format: cstring, ...: cvarargs): void,
  invalidate_stmts: function(mysql: *MYSQL, function_name: cstring): void,
  api: *st_mariadb_api,
  db_read_execute_response: function(stmt: *MYSQL_STMT): cint,
  db_execute_generate_request: function(stmt: *MYSQL_STMT, request_len: *csize, internal: cchar): *cuchar
}
global function mariadb_load_defaults(conf_file: cstring, groups: *cstring, argc: *cint, argv: **cstring): void <cimport,nodecl> end
global mariadb_compiled_charsets: [0]MARIADB_CHARSET_INFO <cimport,nodecl>
global function mysql_cset_escape_quotes(cset: *MARIADB_CHARSET_INFO, newstr: cstring, escapestr: cstring, escapestr_len: csize): csize <cimport,nodecl> end
global function mysql_cset_escape_slashes(cset: *MARIADB_CHARSET_INFO, newstr: cstring, escapestr: cstring, escapestr_len: csize): csize <cimport,nodecl> end
global mysql_port: cuint <cimport,nodecl>
global mysql_unix_port: cstring <cimport,nodecl>
global mariadb_deinitialize_ssl: cuint <cimport,nodecl>
global function mariadb_field_attr(attr: *MARIADB_CONST_STRING, field: *MYSQL_FIELD, type: mariadb_field_attr_t): cint <cimport,nodecl> end
global mysql_ps_fetch_functions: [256]MYSQL_PS_CONVERSION <cimport,nodecl>
global function mysql_init_ps_subsystem(): void <cimport,nodecl> end
global function mysql_stmt_init(mysql: *MYSQL): *MYSQL_STMT <cimport,nodecl> end
global function mysql_stmt_prepare(stmt: *MYSQL_STMT, query: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_stmt_execute(stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_fetch(stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_fetch_column(stmt: *MYSQL_STMT, bind_arg: *MYSQL_BIND, column: cuint, offset: culong): cint <cimport,nodecl> end
global function mysql_stmt_store_result(stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_param_count(stmt: *MYSQL_STMT): culong <cimport,nodecl> end
global function mysql_stmt_attr_set(stmt: *MYSQL_STMT, attr_type: enum_stmt_attr_type, attr: pointer): cchar <cimport,nodecl> end
global function mysql_stmt_attr_get(stmt: *MYSQL_STMT, attr_type: enum_stmt_attr_type, attr: pointer): cchar <cimport,nodecl> end
global function mysql_stmt_bind_param(stmt: *MYSQL_STMT, bnd: *MYSQL_BIND): cchar <cimport,nodecl> end
global function mysql_stmt_bind_result(stmt: *MYSQL_STMT, bnd: *MYSQL_BIND): cchar <cimport,nodecl> end
global function mysql_stmt_close(stmt: *MYSQL_STMT): cchar <cimport,nodecl> end
global function mysql_stmt_reset(stmt: *MYSQL_STMT): cchar <cimport,nodecl> end
global function mysql_stmt_free_result(stmt: *MYSQL_STMT): cchar <cimport,nodecl> end
global function mysql_stmt_send_long_data(stmt: *MYSQL_STMT, param_number: cuint, data: cstring, length: culong): cchar <cimport,nodecl> end
global function mysql_stmt_result_metadata(stmt: *MYSQL_STMT): *MYSQL_RES <cimport,nodecl> end
global function mysql_stmt_param_metadata(stmt: *MYSQL_STMT): *MYSQL_RES <cimport,nodecl> end
global function mysql_stmt_errno(stmt: *MYSQL_STMT): cuint <cimport,nodecl> end
global function mysql_stmt_error(stmt: *MYSQL_STMT): cstring <cimport,nodecl> end
global function mysql_stmt_sqlstate(stmt: *MYSQL_STMT): cstring <cimport,nodecl> end
global function mysql_stmt_row_seek(stmt: *MYSQL_STMT, offset: MYSQL_ROW_OFFSET): MYSQL_ROW_OFFSET <cimport,nodecl> end
global function mysql_stmt_row_tell(stmt: *MYSQL_STMT): MYSQL_ROW_OFFSET <cimport,nodecl> end
global function mysql_stmt_data_seek(stmt: *MYSQL_STMT, offset: culonglong): void <cimport,nodecl> end
global function mysql_stmt_num_rows(stmt: *MYSQL_STMT): culonglong <cimport,nodecl> end
global function mysql_stmt_affected_rows(stmt: *MYSQL_STMT): culonglong <cimport,nodecl> end
global function mysql_stmt_insert_id(stmt: *MYSQL_STMT): culonglong <cimport,nodecl> end
global function mysql_stmt_field_count(stmt: *MYSQL_STMT): cuint <cimport,nodecl> end
global function mysql_stmt_next_result(stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_more_results(stmt: *MYSQL_STMT): cchar <cimport,nodecl> end
global function mariadb_stmt_execute_direct(stmt: *MYSQL_STMT, stmt_str: cstring, length: csize): cint <cimport,nodecl> end
global function mariadb_stmt_fetch_fields(stmt: *MYSQL_STMT): *MYSQL_FIELD <cimport,nodecl> end
global function mysql_load_plugin(mysql: *MYSQL, name: cstring, type: cint, argc: cint, ...: cvarargs): *st_mysql_client_plugin <cimport,nodecl> end
global function mysql_load_plugin_v(mysql: *MYSQL, name: cstring, type: cint, argc: cint, args: cvalist): *st_mysql_client_plugin <cimport,nodecl> end
global function mysql_client_find_plugin(mysql: *MYSQL, name: cstring, type: cint): *st_mysql_client_plugin <cimport,nodecl> end
global function mysql_client_register_plugin(mysql: *MYSQL, plugin: *st_mysql_client_plugin): *st_mysql_client_plugin <cimport,nodecl> end
global function mysql_set_local_infile_handler(mysql: *MYSQL, local_infile_init: function(a1: *pointer, a2: cstring, a3: pointer): cint, local_infile_read: function(a1: pointer, a2: cstring, a3: cuint): cint, local_infile_end: function(a1: pointer): void, local_infile_error: function(a1: pointer, a2: cstring, a3: cuint): cint, a6: pointer): void <cimport,nodecl> end
global function mysql_set_local_infile_default(mysql: *MYSQL): void <cimport,nodecl> end
global function mysql_num_rows(res: *MYSQL_RES): culonglong <cimport,nodecl> end
global function mysql_num_fields(res: *MYSQL_RES): cuint <cimport,nodecl> end
global function mysql_eof(res: *MYSQL_RES): cchar <cimport,nodecl> end
global function mysql_fetch_field_direct(res: *MYSQL_RES, fieldnr: cuint): *MYSQL_FIELD <cimport,nodecl> end
global function mysql_fetch_fields(res: *MYSQL_RES): *MYSQL_FIELD <cimport,nodecl> end
global function mysql_row_tell(res: *MYSQL_RES): *MYSQL_ROWS <cimport,nodecl> end
global function mysql_field_tell(res: *MYSQL_RES): cuint <cimport,nodecl> end
global function mysql_field_count(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mysql_more_results(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mysql_next_result(mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_affected_rows(mysql: *MYSQL): culonglong <cimport,nodecl> end
global function mysql_autocommit(mysql: *MYSQL, mode: cchar): cchar <cimport,nodecl> end
global function mysql_commit(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mysql_rollback(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mysql_insert_id(mysql: *MYSQL): culonglong <cimport,nodecl> end
global function mysql_errno(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mysql_error(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_info(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_thread_id(mysql: *MYSQL): culong <cimport,nodecl> end
global function mysql_character_set_name(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_get_character_set_info(mysql: *MYSQL, cs: *MY_CHARSET_INFO): void <cimport,nodecl> end
global function mysql_set_character_set(mysql: *MYSQL, csname: cstring): cint <cimport,nodecl> end
global function mariadb_get_infov(mysql: *MYSQL, value: mariadb_value, arg: pointer, ...: cvarargs): cchar <cimport,nodecl> end
global function mariadb_get_info(mysql: *MYSQL, value: mariadb_value, arg: pointer): cchar <cimport,nodecl> end
global function mysql_init(mysql: *MYSQL): *MYSQL <cimport,nodecl> end
global function mysql_ssl_set(mysql: *MYSQL, key: cstring, cert: cstring, ca: cstring, capath: cstring, cipher: cstring): cint <cimport,nodecl> end
global function mysql_get_ssl_cipher(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_change_user(mysql: *MYSQL, user: cstring, passwd: cstring, db: cstring): cchar <cimport,nodecl> end
global function mysql_real_connect(mysql: *MYSQL, host: cstring, user: cstring, passwd: cstring, db: cstring, port: cuint, unix_socket: cstring, clientflag: culong): *MYSQL <cimport,nodecl> end
global function mysql_close(sock: *MYSQL): void <cimport,nodecl> end
global function mysql_select_db(mysql: *MYSQL, db: cstring): cint <cimport,nodecl> end
global function mysql_query(mysql: *MYSQL, q: cstring): cint <cimport,nodecl> end
global function mysql_send_query(mysql: *MYSQL, q: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_read_query_result(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mysql_real_query(mysql: *MYSQL, q: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_shutdown(mysql: *MYSQL, shutdown_level: mysql_enum_shutdown_level): cint <cimport,nodecl> end
global function mysql_dump_debug_info(mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_refresh(mysql: *MYSQL, refresh_options: cuint): cint <cimport,nodecl> end
global function mysql_kill(mysql: *MYSQL, pid: culong): cint <cimport,nodecl> end
global function mysql_ping(mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_stat(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_get_server_info(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_get_server_version(mysql: *MYSQL): culong <cimport,nodecl> end
global function mysql_get_host_info(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_get_proto_info(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mysql_list_dbs(mysql: *MYSQL, wild: cstring): *MYSQL_RES <cimport,nodecl> end
global function mysql_list_tables(mysql: *MYSQL, wild: cstring): *MYSQL_RES <cimport,nodecl> end
global function mysql_list_fields(mysql: *MYSQL, table: cstring, wild: cstring): *MYSQL_RES <cimport,nodecl> end
global function mysql_list_processes(mysql: *MYSQL): *MYSQL_RES <cimport,nodecl> end
global function mysql_store_result(mysql: *MYSQL): *MYSQL_RES <cimport,nodecl> end
global function mysql_use_result(mysql: *MYSQL): *MYSQL_RES <cimport,nodecl> end
global function mysql_options(mysql: *MYSQL, option: mysql_option, arg: pointer): cint <cimport,nodecl> end
global function mysql_options4(mysql: *MYSQL, option: mysql_option, arg1: pointer, arg2: pointer): cint <cimport,nodecl> end
global function mysql_free_result(result: *MYSQL_RES): void <cimport,nodecl> end
global function mysql_data_seek(result: *MYSQL_RES, offset: culonglong): void <cimport,nodecl> end
global function mysql_row_seek(result: *MYSQL_RES, a2: MYSQL_ROW_OFFSET): MYSQL_ROW_OFFSET <cimport,nodecl> end
global function mysql_field_seek(result: *MYSQL_RES, offset: MYSQL_FIELD_OFFSET): MYSQL_FIELD_OFFSET <cimport,nodecl> end
global function mysql_fetch_row(result: *MYSQL_RES): MYSQL_ROW <cimport,nodecl> end
global function mysql_fetch_lengths(result: *MYSQL_RES): *culong <cimport,nodecl> end
global function mysql_fetch_field(result: *MYSQL_RES): *MYSQL_FIELD <cimport,nodecl> end
global function mysql_escape_string(to: cstring, from: cstring, from_length: culong): culong <cimport,nodecl> end
global function mysql_real_escape_string(mysql: *MYSQL, to: cstring, from: cstring, length: culong): culong <cimport,nodecl> end
global function mysql_thread_safe(): cuint <cimport,nodecl> end
global function mysql_warning_count(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mysql_sqlstate(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mysql_server_init(argc: cint, argv: *cstring, groups: *cstring): cint <cimport,nodecl> end
global function mysql_server_end(): void <cimport,nodecl> end
global function mysql_thread_end(): void <cimport,nodecl> end
global function mysql_thread_init(): cchar <cimport,nodecl> end
global function mysql_set_server_option(mysql: *MYSQL, option: enum_mysql_set_option): cint <cimport,nodecl> end
global function mysql_get_client_info(): cstring <cimport,nodecl> end
global function mysql_get_client_version(): culong <cimport,nodecl> end
global function mariadb_connection(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mysql_get_server_name(mysql: *MYSQL): cstring <cimport,nodecl> end
global function mariadb_get_charset_by_name(csname: cstring): *MARIADB_CHARSET_INFO <cimport,nodecl> end
global function mariadb_get_charset_by_nr(csnr: cuint): *MARIADB_CHARSET_INFO <cimport,nodecl> end
global function mariadb_convert_string(from: cstring, from_len: *csize, from_cs: *MARIADB_CHARSET_INFO, to: cstring, to_len: *csize, to_cs: *MARIADB_CHARSET_INFO, errorcode: *cint): csize <cimport,nodecl> end
global function mysql_optionsv(mysql: *MYSQL, option: mysql_option, ...: cvarargs): cint <cimport,nodecl> end
global function mysql_get_optionv(mysql: *MYSQL, option: mysql_option, arg: pointer, ...: cvarargs): cint <cimport,nodecl> end
global function mysql_get_option(mysql: *MYSQL, option: mysql_option, arg: pointer): cint <cimport,nodecl> end
global function mysql_hex_string(to: cstring, from: cstring, len: culong): culong <cimport,nodecl> end
global function mysql_get_socket(mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_get_timeout_value(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mysql_get_timeout_value_ms(mysql: *MYSQL): cuint <cimport,nodecl> end
global function mariadb_reconnect(mysql: *MYSQL): cchar <cimport,nodecl> end
global function mariadb_cancel(mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_debug(debug: cstring): void <cimport,nodecl> end
global function mysql_net_read_packet(mysql: *MYSQL): culong <cimport,nodecl> end
global function mysql_net_field_length(packet: **cuchar): culong <cimport,nodecl> end
global function mysql_embedded(): cchar <cimport,nodecl> end
global function mysql_get_parameters(): *MYSQL_PARAMETERS <cimport,nodecl> end
global function mysql_close_start(sock: *MYSQL): cint <cimport,nodecl> end
global function mysql_close_cont(sock: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_commit_start(ret: *cchar, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_commit_cont(ret: *cchar, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_dump_debug_info_cont(ret: *cint, mysql: *MYSQL, ready_status: cint): cint <cimport,nodecl> end
global function mysql_dump_debug_info_start(ret: *cint, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_rollback_start(ret: *cchar, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_rollback_cont(ret: *cchar, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_autocommit_start(ret: *cchar, mysql: *MYSQL, auto_mode: cchar): cint <cimport,nodecl> end
global function mysql_list_fields_cont(ret: **MYSQL_RES, mysql: *MYSQL, ready_status: cint): cint <cimport,nodecl> end
global function mysql_list_fields_start(ret: **MYSQL_RES, mysql: *MYSQL, table: cstring, wild: cstring): cint <cimport,nodecl> end
global function mysql_autocommit_cont(ret: *cchar, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_next_result_start(ret: *cint, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_next_result_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_select_db_start(ret: *cint, mysql: *MYSQL, db: cstring): cint <cimport,nodecl> end
global function mysql_select_db_cont(ret: *cint, mysql: *MYSQL, ready_status: cint): cint <cimport,nodecl> end
global function mysql_stmt_warning_count(stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_next_result_start(ret: *cint, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_next_result_cont(ret: *cint, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_set_character_set_start(ret: *cint, mysql: *MYSQL, csname: cstring): cint <cimport,nodecl> end
global function mysql_set_character_set_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_change_user_start(ret: *cchar, mysql: *MYSQL, user: cstring, passwd: cstring, db: cstring): cint <cimport,nodecl> end
global function mysql_change_user_cont(ret: *cchar, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_real_connect_start(ret: **MYSQL, mysql: *MYSQL, host: cstring, user: cstring, passwd: cstring, db: cstring, port: cuint, unix_socket: cstring, clientflag: culong): cint <cimport,nodecl> end
global function mysql_real_connect_cont(ret: **MYSQL, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_query_start(ret: *cint, mysql: *MYSQL, q: cstring): cint <cimport,nodecl> end
global function mysql_query_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_send_query_start(ret: *cint, mysql: *MYSQL, q: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_send_query_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_real_query_start(ret: *cint, mysql: *MYSQL, q: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_real_query_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_store_result_start(ret: **MYSQL_RES, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_store_result_cont(ret: **MYSQL_RES, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_shutdown_start(ret: *cint, mysql: *MYSQL, shutdown_level: mysql_enum_shutdown_level): cint <cimport,nodecl> end
global function mysql_shutdown_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_refresh_start(ret: *cint, mysql: *MYSQL, refresh_options: cuint): cint <cimport,nodecl> end
global function mysql_refresh_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_kill_start(ret: *cint, mysql: *MYSQL, pid: culong): cint <cimport,nodecl> end
global function mysql_kill_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_set_server_option_start(ret: *cint, mysql: *MYSQL, option: enum_mysql_set_option): cint <cimport,nodecl> end
global function mysql_set_server_option_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_ping_start(ret: *cint, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_ping_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_stat_start(ret: *cstring, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_stat_cont(ret: *cstring, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_free_result_start(result: *MYSQL_RES): cint <cimport,nodecl> end
global function mysql_free_result_cont(result: *MYSQL_RES, status: cint): cint <cimport,nodecl> end
global function mysql_fetch_row_start(ret: *MYSQL_ROW, result: *MYSQL_RES): cint <cimport,nodecl> end
global function mysql_fetch_row_cont(ret: *MYSQL_ROW, result: *MYSQL_RES, status: cint): cint <cimport,nodecl> end
global function mysql_read_query_result_start(ret: *cchar, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_read_query_result_cont(ret: *cchar, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_reset_connection_start(ret: *cint, mysql: *MYSQL): cint <cimport,nodecl> end
global function mysql_reset_connection_cont(ret: *cint, mysql: *MYSQL, status: cint): cint <cimport,nodecl> end
global function mysql_session_track_get_next(mysql: *MYSQL, type: enum_session_state_type, data: *cstring, length: *csize): cint <cimport,nodecl> end
global function mysql_session_track_get_first(mysql: *MYSQL, type: enum_session_state_type, data: *cstring, length: *csize): cint <cimport,nodecl> end
global function mysql_stmt_prepare_start(ret: *cint, stmt: *MYSQL_STMT, query: cstring, length: culong): cint <cimport,nodecl> end
global function mysql_stmt_prepare_cont(ret: *cint, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_execute_start(ret: *cint, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_execute_cont(ret: *cint, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_fetch_start(ret: *cint, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_fetch_cont(ret: *cint, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_store_result_start(ret: *cint, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_store_result_cont(ret: *cint, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_close_start(ret: *cchar, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_close_cont(ret: *cchar, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_reset_start(ret: *cchar, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_reset_cont(ret: *cchar, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_free_result_start(ret: *cchar, stmt: *MYSQL_STMT): cint <cimport,nodecl> end
global function mysql_stmt_free_result_cont(ret: *cchar, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_stmt_send_long_data_start(ret: *cchar, stmt: *MYSQL_STMT, param_number: cuint, data: cstring, len: culong): cint <cimport,nodecl> end
global function mysql_stmt_send_long_data_cont(ret: *cchar, stmt: *MYSQL_STMT, status: cint): cint <cimport,nodecl> end
global function mysql_reset_connection(mysql: *MYSQL): cint <cimport,nodecl> end
global MYSQL_AUTODETECT_CHARSET_NAME: cstring <comptime> = "auto"
global MARIADB_CLIENT_FLAGS: culonglong <cimport,nodecl,const>
global MYSQL_ERRMSG_SIZE: cint <comptime> = 512
global MYSQL50_TABLE_NAME_PREFIX: cstring <comptime> = "#mysql50#"
global MARIADB_CONNECTION_UNIXSOCKET: cint <comptime> = 0
global MARIADB_CONNECTION_TCP: cint <comptime> = 1
global MARIADB_CONNECTION_NAMEDPIPE: cint <comptime> = 2
global MARIADB_CONNECTION_SHAREDMEM: cint <comptime> = 3
global MARIADB_CLIENT_VERSION_STR: cstring <comptime> = "11.7.2"
global MARIADB_BASE_VERSION: cstring <comptime> = "mariadb-11.7"
global MARIADB_VERSION_ID: cint <comptime> = 110702
global MARIADB_PORT: cint <comptime> = 3306
global MARIADB_UNIX_ADDR: cstring <comptime> = "/run/mysqld/mysqld.sock"
global MYSQL_UNIX_ADDR: cstring <comptime> = "/run/mysqld/mysqld.sock"
global MYSQL_PORT: cint <comptime> = 3306
global MYSQL_CONFIG_NAME: cstring <comptime> = "my"
global MYSQL_VERSION_ID: cint <comptime> = 110702
global MYSQL_SERVER_VERSION: cstring <comptime> = "11.7.2-MariaDB"
global MARIADB_PACKAGE_VERSION: cstring <comptime> = "3.4.4"
global MARIADB_PACKAGE_VERSION_ID: cint <comptime> = 30404
global MARIADB_SYSTEM_TYPE: cstring <comptime> = "Linux"
global MARIADB_MACHINE_TYPE: cstring <comptime> = "x86_64"
global MARIADB_PLUGINDIR: cstring <comptime> = "/usr/lib/mysql/plugin"
global MYSQL_CHARSET: cstring <comptime> = ""
global MYSQL_COUNT_ERROR: culonglong <cimport,nodecl,const>
global MARIADB_FIELD_ATTR_LAST: cint <comptime> = 1
global MARIADB_INVALID_SOCKET: cint <comptime> = -1
global MYSQL_WAIT_READ: cint <comptime> = 1
global MYSQL_WAIT_WRITE: cint <comptime> = 2
global MYSQL_WAIT_EXCEPT: cint <comptime> = 4
global MYSQL_WAIT_TIMEOUT: cint <comptime> = 8
global MARIADB_TLS_VERIFY_OK: cint <comptime> = 0
global MARIADB_TLS_VERIFY_TRUST: cint <comptime> = 1
global MARIADB_TLS_VERIFY_HOST: cint <comptime> = 2
global MARIADB_TLS_VERIFY_FINGERPRINT: cint <comptime> = 4
global MARIADB_TLS_VERIFY_PERIOD: cint <comptime> = 8
global MARIADB_TLS_VERIFY_REVOKED: cint <comptime> = 16
global MARIADB_TLS_VERIFY_UNKNOWN: cint <comptime> = 32
global MARIADB_TLS_VERIFY_ERROR: cint <comptime> = 128
global MYSQL_NO_DATA: cint <comptime> = 100
global MYSQL_DATA_TRUNCATED: cint <comptime> = 101
global MYSQL_DEFAULT_PREFETCH_ROWS: culong <comptime> = 1
global MYSQL_PS_SKIP_RESULT_W_LEN: cint <comptime> = -1
global MYSQL_PS_SKIP_RESULT_STR: cint <comptime> = -2
global function mysql_library_init(argc: cint, argv: *cstring, groups: *cstring): cint <cimport,nodecl> end
global function mysql_library_end(): void <cimport,nodecl> end
